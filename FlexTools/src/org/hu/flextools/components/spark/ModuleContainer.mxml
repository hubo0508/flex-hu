<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   borderVisible="false">
	
	<!--模块指定容器-->
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Label;
			
			[Bindable]private var MASK_LABEL:Label;
			private static const MASK_BC:String = "_MASK_BC_";
			private var mask_count:int = 0;
			
			public function progress(value:String,endFlag:String):void
			{
				trace(value+"|"+endFlag);
				
				if(mask_count == 0)
				{
					this.addMask();
				}
				
				this.MASK_LABEL.text = value;
				
				if(value == endFlag)
				{
					this.removeMask();
				}
				
				mask_count++;
			}
			
			public function addMask():void
			{
				var bc:BorderContainer = this.createMask();
				
				if(MASK_LABEL)
					bc.addElement(MASK_LABEL);
				else
					this.createToolTipLable();
					bc.addElement(MASK_LABEL);
				
				this.addElementAt(bc,0);
			}
			
			private function removeMask():void
			{
				var bc:BorderContainer = this.getElementAt(0) as BorderContainer;
				if(bc && bc.id == MASK_BC)
				{
					this.removeElementAt(0);
					
					this.mask_count = 0;
				}
			}
			
			private function createMask():BorderContainer
			{
				var bc:BorderContainer = new BorderContainer();
				bc.setStyle("backgroundColor",0xEEEEEE);
				bc.percentHeight = 100;
				bc.percentWidth  = 100; 
				bc.id = MASK_BC;
				bc.setStyle("backgroundAlpha",0.5);
				
				return bc;
			}
			
			private function createToolTipLable(text:String = ""):void
			{
				var label:Label = new Label();
				label.verticalCenter = 0;
				label.horizontalCenter = 0;
				label.text = text;
				
				if(!this.MASK_LABEL) 
					this.MASK_LABEL = label;
			}
		]]>
	</fx:Script>
	
</s:BorderContainer>
