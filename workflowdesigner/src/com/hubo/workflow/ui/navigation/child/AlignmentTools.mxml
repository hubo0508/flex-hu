<?xml version="1.0" encoding="utf-8"?>
<!--
	 <p><b>auth：</b>HUBO</p>
	 <p><b>create-time：</b>2012-6-10</p>
	 <p><b>mail：</b>hubo.0508ⓐgmail.com	</p>
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="creationComplete(event)"
		 width="145">

	<fx:Metadata>
		[Event(name="clickAlignmentTools",type="mx.events.DynamicEvent")]
	</fx:Metadata>

	<fx:Script>
		<![CDATA[
			import com.hubo.workflow.components.Button;
			import com.hubo.workflow.components.TooTip;
			import com.hubo.workflow.util.Global;
			import com.hubo.workflow.util.UIUtil;
			
			import mx.core.IVisualElement;
			import mx.events.DynamicEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import spark.filters.ColorMatrixFilter;

			public static const LAYERS_TOP:String="LAYERS_TOP";
			public static const LAYERS_MIDDLE:String="LAYERS_MIDDLE";
			public static const LAYERS_BOTTOM:String="LAYERS_BOTTOM";

			public static const LAYERS_LEFT:String="LAYERS_LEFT";
			public static const LAYERS_CENTER:String="LAYERS_CENTER";
			public static const LAYERS_RIGHT:String="LAYERS_RIGHT";

			public static const CLICK_ALIGNMENT_TOOLS:String="clickAlignmentTools";

			/**
			 * 消息提示容器【内部使用】
			 */
			private var tootip:TooTip;

			override protected function createChildren():void
			{
				super.createChildren();
				tootip ? null : tootip=new TooTip("");
			}

			protected function creationComplete(event:FlexEvent):void
			{
				this.initEvent();
			}

			private function initEvent():void
			{
				for (var i:int=0, num:int=this.numElements; i < num; i++)
				{
					var button:IVisualElement=this.getElementAt(i);
					button.addEventListener(MouseEvent.CLICK, buttonMouseHandler, false, 0, true);
					button.addEventListener(MouseEvent.ROLL_OUT, buttonMouseHandler, false, 0, true);
					button.addEventListener(MouseEvent.ROLL_OVER, buttonMouseHandler, false, 0, true);
				}
			}

			protected function buttonMouseHandler(event:MouseEvent):void
			{
				var button:LinkButton=event.currentTarget as LinkButton;
				switch (event.type)
				{
					case MouseEvent.CLICK:
						var dye:DynamicEvent=new DynamicEvent(CLICK_ALIGNMENT_TOOLS);
						dye.name=button.name;
						this.dispatchEvent(dye);
						break;

					case MouseEvent.ROLL_OUT:
						PopUpManager.removePopUp(tootip);
						break;

					case MouseEvent.ROLL_OVER:
						var point:Point = UIUtil.getUiAbsolutePosition(button);
						tootip.x = point.x - button.width*0.5 - 4;
						tootip.y = point.y + 35;
						tootip.text = button.id;
						PopUpManager.addPopUp(tootip, UIUtil.getApplication(this), false);
						break;

					default:
						break;
				}
			}
		]]>

	</fx:Script>

	<mx:LinkButton id="顶对齐"   name="{LAYERS_TOP}"	   icon="{Global.LAYERS_TOP}"   verticalCenter="0"   left="5"	   paddingLeft="2"   paddingRight="2"/>

	<mx:LinkButton enabled="false"   id="垂直中齐"   name="{LAYERS_MIDDLE}"   icon="{Global.LAYERS_MIDDLE}"   verticalCenter="0"   left="26"   paddingLeft="2"   paddingRight="2"   filters="{[new ColorMatrixFilter(Global.bwMatrix)]}"/>

	<mx:LinkButton enabled="false"   id="底对齐"   name="{LAYERS_BOTTOM}"   icon="{Global.LAYERS_BOTTOM}"  verticalCenter="0"   left="48"   paddingLeft="2"  paddingRight="2"  filters="{[new ColorMatrixFilter(Global.bwMatrix)]}"/>

	<mx:LinkButton id="左对齐"   name="{LAYERS_LEFT}"   icon="{Global.LAYERS_LEFT}"   verticalCenter="0"   left="76"   paddingLeft="2"	   paddingRight="2"/>

	<mx:LinkButton enabled="false"   id="水平中齐"   name="{LAYERS_CENTER}"   icon="{Global.LAYERS_CENTER}"   verticalCenter="0"   left="97"   paddingLeft="2"   paddingRight="2"   filters="{[new ColorMatrixFilter(Global.bwMatrix)]}"/>

	<mx:LinkButton enabled="true"  id="右对齐"   name="{LAYERS_RIGHT}"   icon="{Global.LAYERS_RIGHT}"   verticalCenter="0"   left="120"  paddingLeft="2"   paddingRight="2"/>

</s:Group>
