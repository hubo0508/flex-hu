<?xml version="1.0" encoding="utf-8"?>
<!--
	 <p><b>auth：</b>HUBO</p>
	 <p><b>create-time：</b>2012-7-15</p>
	 <p><b>mail：</b>hubo.0508ⓐgmail.com	</p>
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   xmlns:graphic="com.hubo.workflow.components.graphic.*"
				   xmlns:components="com.hubo.workflow.components.*"
				   name="content"
				   top="125"
				   bottom="23"
				   width="100%">
	
	<fx:Script>
		<![CDATA[
			import com.hubo.workflow.components.Node;
			 
			/**
			 * 清除所有选择状态节点
			 */
			public function cleanSelectedAll():void
			{
				for(var i:int=0,num:int=this.numElements; i<num; i++)
				{
					var node:Node = this.getElementAt(i) as Node;
					node ? node.selected = false: null;
				}
			}
			
			/**
			 * 删除所有选择状态节点
			 */
			public function removeSelectedAll():void
			{
				var selectedNode:Array =  selectedNode();
				for(var i:int=0,num:int=selectedNode.length; i<num; i++)
				{
					this.removeElement(selectedNode[i]);
				}
			}
			
			/**
			 * 鼠标移动所有选择状态节点
			 */
			public function moveSelectedAllWidthDrag(x:Number, y:Number):void
			{
				var selectedNode:Array =  selectedNode();
				for(var i:int=0,num:int=selectedNode.length; i<num; i++)
				{
					var node:Node = selectedNode[i] as Node;
					if(node && node.selected)
					{
						node.x != x ? node.x += x : null;
						node.y != y ? node.y += y : null;
					}
				}
			}
			
			/**
			 * 键盘移动所有选择状态节点
			 */
			public function moveSelectedAllWidthKeyboard(code:uint):void
			{
				var selectedNode:Array =  selectedNode();
				for(var i:int=0,num:int=selectedNode.length; i<num; i++)
				{
					var node:Node = selectedNode[i];
					switch(code)
					{
						case Keyboard.RIGHT:
							node.x += 2;
							break;
						
						case Keyboard.UP:
							node.y -= 2;
							break;
						
						case Keyboard.DOWN:
							node.y += 2;
							break;
						
						case Keyboard.LEFT:
							node.x -= 2;
							break;
						
						default:
							break;
					}
				}
			}
			
			/**
			 * 取得所有选择状态节点
			 */
			public function selectedNode():Array
			{
				var selectedNode:Array = [];
				for(var i:int=0,num:int=this.numElements; i<num; i++)
				{
					var node:Node = this.getElementAt(i) as Node;
					if(node && node.selected)
					{
						selectedNode[i] = node;
					}
				}
				
				return selectedNode;
			}
				
		]]>
	</fx:Script>
</s:Group>
