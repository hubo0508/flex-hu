<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:graphic="com.printingoffice.framework.components.graphic.*"
			   xmlns:datagrid="com.printingoffice.framework.components.datagrid.*"
			   xmlns:components="com.printingoffice.framework.components.*" creationComplete="application1_creationCompleteHandler(event)">

	<fx:Script>
		<![CDATA[
			import com.printingoffice.framework.components.graphic.Legend;
			import com.printingoffice.framework.core.TweenLite;
			import com.printingoffice.framework.util.Const;
			
			import mx.collections.ArrayCollection;
			import mx.events.DynamicEvent;
			import mx.events.FlexEvent;
			import mx.managers.CursorManager;
			
			import spark.components.Label;
			
			
			private var rowHeight:int = 11;
			
			private var rowTop:int = 10;
			
			private var chartLeft:int = 50;
			
			private var chartRight:int = 50;
			
			private var keyField:String = "type";
			
			private var valueField:String = "numbers";

			private static const RIGHT_Y_AXIS_TAG:String = "rightYAxisTag";
			
			private static const LEFT_Y_AXIS_TAG:String = "leftYAxisTag";
	
			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				var acc:ArrayCollection = new ArrayCollection();
				acc.addItem({type:'已接件',numbers:120});
				acc.addItem({type:'等待中',numbers:60});
				acc.addItem({type:'印刷中',numbers:70});
				acc.addItem({type:'装订中',numbers:40});
				acc.addItem({type:'已完成',numbers:20});
				acc.addItem({type:'待送件',numbers:10});
				
				initChart(acc);
			}
			
			public function initChart(data:ArrayCollection):void
			{
				if(data == null || data.length == 0) return;
					
				var maxNumber:Number = getMaxNumber(data);
				
				var len:int = data.length;
				for(var i:int=0; i<len; i++)
				{
					var item:Object = data.getItemAt(i);	
					var leftTag:Label = createLeftYAxisTag(item,i);					
					this.chartConainer.addElement(leftTag);
					
					var legend:Legend = createLegend(i);
					this.chartConainer.addElement(legend);
					
					var singlePixel:Number = getSinglePixel(maxNumber);
					var originalWidth:Number = singlePixel * Number(item[valueField]);
					
					playEffect(legend,originalWidth);
					
					var value:String = item[valueField].toString();
					var rightTag:Label = createRightYAxisTag(i, value, originalWidth, legend.top);
					this.chartConainer.addElement(rightTag);
				}
			}
			
			private function playEffect(legend:Legend, actualWidth:Number):void
			{
				new TweenLite(legend,1,{width:actualWidth});				
			}
			
			private function getSinglePixel(maxWidth:Number):Number
			{
				var instanceOfWide:Number = chartConainer.width - chartLeft - chartRight;
				
				return instanceOfWide / maxWidth;
			}
			
			private function getMaxNumber(data:ArrayCollection):Number
			{
				var maxNum:Number = 0;
				
				var len:int = data.length;
				for(var i:int=0; i<len; i++)
				{
					var newNum:Number =  Number(data.getItemAt(i)[valueField]);
					maxNum = maxNum > newNum ? maxNum : newNum;
				}
				
				return maxNum;
			}
			
			private function createLegend(index:int):Legend
			{
				var legend:Legend = new Legend();
				legend.top = index == 0 ? rowTop : (rowHeight +rowTop) * index + rowTop;
				legend.left = chartLeft;
				legend.width = 1;
				
				return legend;
			}
			
			private function createLeftYAxisTag(item:Object, index:int):Label
			{
				var lab:Label = new Label();
				lab.id = index.toString();
				lab.name = LEFT_Y_AXIS_TAG;
				lab.text = item[keyField];
				lab.top = index == 0 ? rowTop : (rowHeight +rowTop) * index + rowTop;
				lab.left = 5;
				
				return lab;
			}
			
			private function createRightYAxisTag(index:int, text:String, legendWidth:Number, top:Object):Label
			{
				var tag:Label = new Label();
				tag.id = index.toString();
				tag.name = right_Y_AXIS_TAG;
				tag.top = top+1;
				tag.text = text;
				tag.left = chartLeft + legendWidth + 5;
				
				return tag;
			}
		]]>
	</fx:Script>
	
	
	<s:BorderContainer top="10" left="10" width="148" height="153" />

	<s:HGroup width="100%" height="153" x="170" y="10">
		
		<!--图表-->
		
		<s:BorderContainer id="chartConainer" width="50%" height="100%" />
		
		<!--当前值班人员-->
		<s:BorderContainer width="50%" height="100%">
			
		</s:BorderContainer>
	</s:HGroup>
	
	
</s:Application>
