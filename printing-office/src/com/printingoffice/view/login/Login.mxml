<?xml version="1.0" encoding="utf-8"?>
<!--
	 <p><b>auth：</b>HUBO</p>
	 <p><b>create-time：</b>2012-2-6</p>
	 <p><b>mail：</b>hubo.0508ⓐgmail.com	</p>
-->
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   xmlns:components="com.printingoffice.components.*" 
				   initialize="initializeHandler(event)" 
				   creationComplete="creationCompleteHandler(event)"
				   height="100%"
				   width="100%"
				   borderVisible="false"
				   backgroundAlpha="0" xmlns:components1="com.printingoffice.framework.components.*">
	
	<fx:Script>
		<![CDATA[
			import assets.skin.LoginBtnSkin;
			
			import com.printingoffice.framework.core.TweenLite;
			import com.printingoffice.framework.event.LoginEvent;
			import com.printingoffice.framework.util.IconConst;
			import com.printingoffice.framework.util.StringUtil;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			protected function initializeHandler(event:FlexEvent):void
			{
				addEventListener(KeyboardEvent.KEY_DOWN, onEnterHandler,false,0,true);
			}

			protected function creationCompleteHandler(event:FlexEvent):void
			{
				focusManager.setFocus(usernametext); 
			}

			protected function onEnterHandler(event:KeyboardEvent):void
			{
				if (event.keyCode == Keyboard.ENTER)
				{ 
					this.loadBtn_clickHandler();
				}
			}

			protected function focusEventHandler(event:FocusEvent):void
			{
				var tinput:TInput  = event.currentTarget as  TInput;
				var parentBC:BorderContainer = tinput.owner as BorderContainer;
				var bgColor:String = parentBC.getStyle("backgroundColor").toString();
				
				switch(event.type)
				{
					case FocusEvent.FOCUS_IN:
//						if(bgColor == "15922165")
//						{
							parentBC.setStyle("backgroundColor",0xFFFFFF);
//						}
						break;
					
					case FocusEvent.FOCUS_OUT :
//						if(bgColor == "16777215")
//						{
							parentBC.setStyle("backgroundColor",0xF2F3F5);
//						}
						break;
					
					default:
						break;
				}				
			}


			protected function loadBtn_clickHandler(event:Event = null):void
			{
				var uname:String = usernametext.text;
				var upassd:String = passwordtext.text;
				
				this.validatorText(uname,upassd);
				
				if(StringUtil.isNotEmpty(uname) && StringUtil.isNotEmpty(upassd))
				{
					var e:LoginEvent  = new LoginEvent(LoginEvent.LOGIN_EVENT);
					e.username = uname;
					e.password = upassd;
					
					this.loadBtn.startUsing();
					
					focusManager.hideFocus();
					
					this.dispatchEvent(e);
				}				
			}
			
			public function validatorText(uname:String,upassd:String):void
			{
				if((StringUtil.isEmpty(uname) && StringUtil.isEmpty(upassd)) || StringUtil.isEmpty(uname) || StringUtil.isEmpty(upassd))
				{
					if(StringUtil.isEmpty(uname)){
						usermessage.text = "用户名不能为空！";
						this.showMessage(usermessagebc,115);
					}else{
						this.showMessage(usermessagebc,80);
					}
					if(StringUtil.isEmpty(upassd)){
						passwordmessage.text = "密码不能为空！";
						this.showMessage(passwordmessagebc,115);
					}else{
						this.showMessage(passwordmessagebc,80);
					}
				}
				else
				{
					if(StringUtil.isNotEmpty(uname)){
						this.showMessage(usermessagebc,80);
					}
					if(StringUtil.isNotEmpty(upassd)){
						this.showMessage(passwordmessagebc,80);
					}
				}
			}
			
			public function loginError(umessage:String,pmessage:String):void
			{								
				this.loadBtn.finishUsing();
				
				if(StringUtil.isNotEmpty(umessage))
				{
					this.usermessage.text = umessage;
					this.showMessage(usermessagebc,115);
				}
				
				if(StringUtil.isNotEmpty(pmessage))
				{
					this.passwordmessage.text = pmessage;
					this.showMessage(passwordmessagebc,115);
				}
			}

			private function showMessage(bc:BorderContainer,top:Number):void
			{
				if(bc.top != top){
					new TweenLite(bc, .5, {top: top});
				}
			}


		]]>
	</fx:Script>
	
	<fx:Metadata>
		[Event(name="login",type="com.printingoffice.framework.event.LoginEvent")]
	</fx:Metadata>
	
	<s:BorderContainer height="33" backgroundAlpha="0.4" backgroundColor="#000000" x="0" y="0" borderVisible="false" width="100%">
		<mx:Image source="assets/image/font-version.png" verticalCenter="0" left="10"/>
	</s:BorderContainer>

	<s:BorderContainer borderVisible="false" backgroundAlpha="0" verticalCenter="0"  horizontalCenter="0" height="155">
		<mx:Image source="assets/image/logo.png"/>
		
		<s:BorderContainer id="usermessagebc" cornerRadius="5" width="203" height="35" borderVisible="false" backgroundColor="#FFEF6C" top="80" left="6">
			<s:Label id="usermessage" fontSize="16" text="用户名不存在！" color="#8F8958" verticalCenter="1" horizontalCenter="0"/>
		</s:BorderContainer>
		<s:BorderContainer width="216" height="49" borderVisible="false" backgroundColor="#F2F3F5" top="70" cornerRadius="4">
			<s:filters> 
				<s:DropShadowFilter  angle='45' blurX='4' blurY='4' distance='0'
									 alpha='0.4' color='#000000'  knockout='false' quality='1'
									 strength='1' inner='false' hideObject='false'/>
			</s:filters>
			<mx:Image source="assets/image/user-btn.png" verticalCenter="0" left="8"/>		
			<components1:TInput id="usernametext" imeMode="CHINESE" fontSize="16" emptyText="" borderVisible="false" verticalCenter="0" left="35" right="8" focusAlpha="0" contentBackgroundAlpha="0"
							   focusIn="focusEventHandler(event)" focusOut="focusEventHandler(event)"/>
		</s:BorderContainer>		
	
		<s:BorderContainer id="passwordmessagebc" cornerRadius="5" width="203" height="35" borderVisible="false" backgroundColor="#FFEF6C" top="80" left="230">
			<s:Label id="passwordmessage" fontSize="16" text="密码错误！" color="#8F8958" verticalCenter="1" horizontalCenter="0"/>
		</s:BorderContainer>
		<s:BorderContainer width="216" height="49" borderVisible="false" backgroundColor="#F2F3F5" top="70" cornerRadius="4" left="223">
			<s:filters>
				<s:DropShadowFilter  angle='45' blurX='4' blurY='4' distance='0'
												alpha='0.4' color='#000000'  knockout='false' quality='1'
												strength='1' inner='false' hideObject='false'/>
			</s:filters>
			<mx:Image source="assets/image/password-btn.png" verticalCenter="0" left="8"/>
			<components1:TInput    id="passwordtext" displayAsPassword="true"  fontSize="16"  borderVisible="false" verticalCenter="0" left="38" right="8" focusAlpha="0" contentBackgroundAlpha="0"
								focusIn="focusEventHandler(event)" focusOut="focusEventHandler(event)"/>
		</s:BorderContainer>
		
		<components1:LoadButton id="loadBtn" click="loadBtn_clickHandler(event)" label="登  录" fontSize="20" top="70" left="455" height="49" width="105" />
		
	</s:BorderContainer>
	
</s:BorderContainer>
