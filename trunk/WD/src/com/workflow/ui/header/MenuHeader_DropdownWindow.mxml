<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx" 
				   borderVisible="true"
				   borderColor="0xEFEFEF"
				   width="180">
	
	<fx:Script>
		<![CDATA[
			import com.workflow.components.extend.BGRect;
			import com.workflow.skin.components.Round_CheckBoxSkin;
			
			import mx.core.IVisualElement;
			import mx.core.UIComponent;
			import mx.events.DynamicEvent;
			
			import spark.components.CheckBox;
			import spark.components.Group;
			import spark.components.Image;
			import spark.components.Label;
			
			public static const CLICK_ITEM:String = "clickItem";
			
			private var _itemHeight:Number = 31;
			
			private var _parentMenu:String;
			
			override protected function createChildren():void
			{
				super.createChildren();
			}
			
			public function set dataProvider(data:Array):void
			{
				if(data == null)return;
				
				var num:int = data.length;
				for(var i:int=0; i<num; i++)
				{
					var item:Group = this.createItem(data[i]);
					i==0 ? item.y = 7 : item.y = i * itemHeight + 7
					item.addEventListener(MouseEvent.ROLL_OUT,itemHandler,false,0,true);
					item.addEventListener(MouseEvent.ROLL_OVER,itemHandler,false,0,true);
					item.addEventListener(MouseEvent.CLICK,itemHandler,false,0,true);
					
					this.addElement(item);
				}
				
				this.height = num * itemHeight + 17;
			}
			
			protected function itemHandler(event:MouseEvent):void
			{
				var bgrect:BGRect = this.getFirstElement(event.currentTarget) as BGRect;
				
				switch(event.type)
				{
					case MouseEvent.ROLL_OUT :
						bgrect.color = 0xFFFFFF;
						break;
					
					case MouseEvent.ROLL_OVER :
						bgrect.color = 0xEFEFEF;
						break;
					
					case MouseEvent.CLICK :
						var dye:DynamicEvent = new DynamicEvent(CLICK_ITEM);
						dye.text = event.currentTarget.name;
						
						this.dispatchEvent(dye);
						break;
					
					default:
						break;
				}
				
			}
			
			private function createItem(data:Object):Group
			{
				
				var group:Group = new Group();
				group.height = itemHeight;
				group.percentWidth = 100;
				group.name = data["text"];
				
				var bgrect:BGRect = new BGRect();
				bgrect.height = 31;
				group.addElement(bgrect);
				
				if(data["type"] == "Image")
				{
					var image:Image = new Image();
					image.source = data["image"];
					image.x = 10;
					image.verticalCenter = 0;
					group.addElement(image);
				}
				if(data["type"] == "CheckBox")
				{
					var cBox:CheckBox = new CheckBox();
					cBox.setStyle("skinClass",Class(Round_CheckBoxSkin));
					cBox.x = 10;
					cBox.verticalCenter = 0;
					group.addElement(cBox);
				}
				
				var text:Label = new Label();
				text.text = data["text"];
				text.verticalCenter = 0;
				text.x = 35;
				group.addElement(text);
				
				return group;
			}
			
			private function getFirstElement(element:Object):Object
			{
				return element.getElementAt(0);
			}
			
			public function get itemHeight():Number
			{
				return _itemHeight;
			}
			
			public function set itemHeight(value:Number):void
			{
				_itemHeight = value;
			}

			public function get parentMenu():String
			{
				return _parentMenu;
			}

			public function set parentMenu(value:String):void
			{
				_parentMenu = value;
			}

			
		]]>
	</fx:Script>
	
	<s:filters> 
		<flash.filters:DropShadowFilter id='dropShadowFilter' xmlns:flash.filters='flash.filters.*' 
										angle='81'
										blurX='15' blurY='15'
										distance='5'
										alpha='0.1' color='#000000' 
										knockout='false' quality='2'
										strength='1' inner='false' hideObject='false'/>
	</s:filters>
	
</s:BorderContainer>
