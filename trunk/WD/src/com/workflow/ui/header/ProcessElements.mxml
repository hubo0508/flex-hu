<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   skinClass="com.workflow.skin.components.Window_TitleWindowSkin"
			   xmlns:extend="com.workflow.components.extend.*"
			   width="100"
			   height="268">
	
	<fx:Script>
		<![CDATA[
			import com.workflow.components.extend.BGRect;
			import com.workflow.components.extend.EDragSource;
			import com.workflow.components.extend.EImage;
			import com.workflow.util.Util;
			
			import mx.core.DragSource;
			import mx.core.UIComponent;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.managers.DragManager;
			
			import spark.components.Group;
			import spark.components.Label;
			import spark.filters.DropShadowFilter;
			
			private var _parentMenu:String;
			
			public static const NODE_FORMAT:String = "NODE";
			
			override protected function createChildren():void
			{
				super.createChildren();
				
				if(nodedata == null)return;
				
				var num:int = nodedata.length;
				for(var i:int=0; i<num; i++)
				{
					var item:Group = createNode(nodedata[i]);
					item.addEventListener(MouseEvent.ROLL_OUT,itemRollHandler,false,0,true);
					item.addEventListener(MouseEvent.ROLL_OVER,itemRollHandler,false,0,true);
					
					nodeContainer.addElement(item);
				}
			}
			
			
			protected function itemRollHandler(event:MouseEvent):void
			{
				var item:Group = event.currentTarget as Group;
				switch(event.type)
				{
					case MouseEvent.ROLL_OUT :
						Util.elementVisible(item.getElementAt(0),false);
						break;
					
					case MouseEvent.ROLL_OVER :
						Util.elementVisible(item.getElementAt(0),true);
						break;
					
					default:
						break;
				}
			}
			
			private function createNode(data:Object):Group
			{
				var item:Group = new Group();
				item.height = 78;
				item.percentWidth = 100;
				
				var bgRect:BGRect = new BGRect();
				bgRect.color = 0xEFEFEF;
				bgRect.visible = false;
				item.addElement(bgRect);
				
				var image:EImage = new EImage();
				image.y = 6;
				image.data = data;
				image.source = data["image"];
				image.useHandCursor = true;
				image.buttonMode = true;
				image.horizontalCenter = 0;
				image.addEventListener(MouseEvent.ROLL_OUT,imageMouseHandler,false,0,true);
				image.addEventListener(MouseEvent.ROLL_OVER,imageMouseHandler,false,0,true);
				image.addEventListener(MouseEvent.MOUSE_DOWN,imageMouseHandler,false,0,true);
				item.addElement(image);
				
				var label:Label = new Label();
				label.text = data["text"];
				label.y = 59;
				label.horizontalCenter = 0;
				item.addElement(label);
				
				return item;
			}
			
			protected function imageMouseHandler(event:MouseEvent):void
			{
				var image:EImage = event.currentTarget as EImage;
				switch(event.type)
				{
					case MouseEvent.ROLL_OUT :
						image.filters = [];
						break;
					
					case MouseEvent.ROLL_OVER :
						image.filters = [Util.getInstanceDropShadow()];
						break;

					case MouseEvent.MOUSE_DOWN :
						DragManager.doDrag(image,new EDragSource(image.data,NODE_FORMAT),event); 
						break;
					
					default:
						break;
				}
			}
			
			
			public function get parentMenu():String
			{
				return _parentMenu;
			}
			
			public function set parentMenu(value:String):void
			{
				_parentMenu = value;
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<fx:Array id="nodedata">
			<fx:Object text="开始" height="47" image="assets/workflow/image/n-start.png"/>
			<fx:Object text="审核" height="47" image="assets/workflow/image/n-node.png"/>
			<fx:Object text="结束" height="47" image="assets/workflow/image/n-end.png"/>
		</fx:Array>
	</fx:Declarations>
	
	<s:VGroup id="nodeContainer"  width="100%" gap="0" horizontalAlign="center" paddingBottom="6" paddingTop="6" />
	
</s:TitleWindow>
