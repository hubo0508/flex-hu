<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 initialize="initializeHandler(event)"
		 height="70">
	
	<fx:Script>
		<![CDATA[
			import com.biiway.stockassistant.util.Const;
			
			import mx.events.FlexEvent;
			
			import spark.components.WindowedApplication;
			
			[Bindable]private var maxrestoreicon:Class = Const.MAX;
			
			public static const LOGOUTEVENT:String = "logoutEvent";
			
			protected function initializeHandler(event:FlexEvent):void
			{
				this.initEvent();
			}
			
			private function initEvent():void
			{
				minbg.addEventListener(MouseEvent.CLICK,minHandler,false,0,true);
				minbg.addEventListener(MouseEvent.MOUSE_OVER,minHandler,false,0,true);
				minbg.addEventListener(MouseEvent.MOUSE_OUT,minHandler,false,0,true);
				
				maxrestorebg.addEventListener(MouseEvent.CLICK,maxrestoreHandler,false,0,true);
				maxrestorebg.addEventListener(MouseEvent.MOUSE_OVER,maxrestoreHandler,false,0,true);
				maxrestorebg.addEventListener(MouseEvent.MOUSE_OUT,maxrestoreHandler,false,0,true);
				
				closebg.addEventListener(MouseEvent.CLICK,closeHandler,false,0,true);
				closebg.addEventListener(MouseEvent.MOUSE_OVER,closeHandler,false,0,true);
				closebg.addEventListener(MouseEvent.MOUSE_OUT,closeHandler,false,0,true);
				
				nativeGroup.addEventListener(MouseEvent.MOUSE_DOWN,nativeGroupHandler,false,0,true);
				nativeGroup.addEventListener(MouseEvent.DOUBLE_CLICK,nativeGroupHandler,false,0,true);
				
				logoutbtn.addEventListener(MouseEvent.CLICK,logoutbtnHandler,false,0,true);
			}
			
			protected function logoutbtnHandler(event:MouseEvent):void
			{
				this.dispatchEvent(new Event(LOGOUTEVENT));
			}
			
			protected function nativeGroupHandler(event:MouseEvent):void
			{
				switch(event.type)
				{
					case MouseEvent.MOUSE_DOWN :
						(parentApplication as WindowedApplication).nativeWindow.startMove();
						break;
					
					case MouseEvent.DOUBLE_CLICK :
						updateWindownMeasurement();
						break;
					
					default:
						break;
				}
			}
			
			protected function maxrestoreHandler(event:MouseEvent):void
			{
				switch(event.type)
				{
					case MouseEvent.CLICK :
						updateWindownMeasurement();
						break;
					
					case MouseEvent.MOUSE_OVER :
						buttonBackgroundVisible(maxrestorebi_bg,true);
						break;
					
					case MouseEvent.MOUSE_OUT :
						buttonBackgroundVisible(maxrestorebi_bg,false);
						break;
					
					default :
						break;
				}
			}
			
			/**
			 * 更新窗口尺寸大小
			 */
			public function updateWindownMeasurement():void
			{
				var wapp:WindowedApplication = parentApplication as WindowedApplication;
				switch(nativeGroup.name)
				{
					case NativeWindowDisplayState.NORMAL :
						wapp.maximize();
						nativeGroup.name = NativeWindowDisplayState.MAXIMIZED;
						maxrestoreicon = Const.REVERT;
						break;
					
					case NativeWindowDisplayState.MAXIMIZED :
						wapp.restore();
						nativeGroup.name = NativeWindowDisplayState.NORMAL;
						maxrestoreicon = Const.MAX;
						break;
					
					default:
						break;
				}
			}
			
			protected function minHandler(event:MouseEvent):void
			{
				switch(event.type)
				{
					case MouseEvent.CLICK :
						(parentApplication as WindowedApplication).minimize();
						break;
					
					case MouseEvent.MOUSE_OVER :
						buttonBackgroundVisible(minbi_bg,true);
						break;
					
					case MouseEvent.MOUSE_OUT :
						buttonBackgroundVisible(minbi_bg,false);
						break;
					
					default :
						break;
				}
			}
			
			protected function closeHandler(event:MouseEvent):void
			{
				switch(event.type)
				{
					case MouseEvent.CLICK :
						(parentApplication as WindowedApplication).exit();
						break;
					
					case MouseEvent.MOUSE_OVER :
						buttonBackgroundVisible(closebi_bg,true);
						break;
					
					case MouseEvent.MOUSE_OUT :
						buttonBackgroundVisible(closebi_bg,false);
						break;
					
					default :
						break;
				}
			}
			
			private function buttonBackgroundVisible(bi:BitmapImage,visible:Boolean):void
			{
				if(bi && bi.visible != visible)
				{
					bi.visible = visible;	
				}
			}
		]]>
	</fx:Script>
	
	<fx:Metadata>
		[Event(name="logoutEvent",type="flash.events.Event")]
	</fx:Metadata>

	<s:BitmapImage x="0" y="0" width="100%" height="49" source="@Embed('assets/image/navigationBackground.png')"/>
	
	<s:BitmapImage left="10" top="8" source="@Embed('assets/image/logoc.png')"/>
	
	<!--标题头-->
	<s:Group id="nativeGroup" name="{NativeWindowDisplayState.NORMAL}" left="0" right="0" top="0" height="40" doubleClickEnabled="true" useHandCursor="true" buttonMode="true"/>
	
	<s:Label id="logoutbtn" right="120" top="7" color="#FF0000" fontSize="13" fontWeight="normal" text="注销"/>
	<s:Label id="messagetext" right="165" top="7" fontSize="13" text="欢迎您，15828019062"/>	
	
	<!--标题头>最小按钮-->
	<s:Group id="minbg" right="69" top="0" width="27" height="25" useHandCursor="true" buttonMode="true"/>
	<s:BitmapImage id="minbi_bg" visible="false" right="69" top="0" source="@Embed('assets/image/max_min_background.png')"/>
	<s:BitmapImage id="minbi" right="76" top="11.5" source="{Const.MIN}"/>
	
	<!--标题头>最大或还原按钮-->
	<s:Group id="maxrestorebg"   right="41" top="0" width="27" height="25" useHandCursor="true" buttonMode="true"/>
	<s:BitmapImage id="maxrestorebi_bg" visible="false" right="41" top="0" source="@Embed('assets/image/max_min_background.png')"/>
	<s:BitmapImage id="maxrestorebi" right="48" top="5" source="{maxrestoreicon}"/>
	
	<!--标题头>关闭按钮-->
	<s:Group id="closebg"   right="13" top="0" width="27" height="25" useHandCursor="true" buttonMode="true"/>
	<s:BitmapImage id="closebi_bg" visible="false" right="13" top="0" source="@Embed('assets/image/close_background.png')"/>
	<s:BitmapImage id="closebi" right="20" top="5" source="{Const.CLOSE}"/>
	
	<!--标题头>按钮分隔线-->
	<s:BitmapImage right="12" top="0"  source="@Embed('assets/image/CSeparator.png')"/>

</s:Group>
