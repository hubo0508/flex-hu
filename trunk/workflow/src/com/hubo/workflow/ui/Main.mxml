<?xml version="1.0" encoding="utf-8"?>
<!--
	 <p><b>auth：</b>HUBO</p>
	 <p><b>create-time：</b>2012-6-6</p>
	 <p><b>mail：</b>hubo.0508ⓐgmail.com	</p>
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:child="com.hubo.workflow.ui.child.*"
		 creationComplete="init()"
		 width="100%"
		 height="100%">
	
	<fx:Script>
		<![CDATA[
			import com.hubo.workflow.core.ElementLine;
			import com.hubo.workflow.core.ElementNode;
			import com.hubo.workflow.event.CreateElementLineEvent;
			import com.hubo.workflow.event.CreateElementNodeEvent;
			import com.hubo.workflow.ui.child.ConfigTools;
			import com.hubo.workflow.util.Global;
			
			import mx.core.IVisualElement;
			import mx.core.UIComponent;
			import mx.events.DynamicEvent;
			
			private var countnode:int = 1;
			
			/**
			 * 手动画线时的起点坐标
			 */
			private var  startingPoint:Point = new Point(0,0);
			
			/**
			 * 初始事件监听
			 */
			private function initEventListener():void
			{
				this.addEventListener(MouseEvent.MOUSE_DOWN, drawLineHandler,false,0,true);  
				this.addEventListener(MouseEvent.MOUSE_UP,  drawLineHandler,false,0,true);  
				this.addEventListener(MouseEvent.MOUSE_MOVE,  drawLineHandler,false,0,true);  
			}
			
			/**
			 * 开始画线
			 */
			protected function createElementLineHandler(event:CreateElementLineEvent):void
			{
				this.workflowGroup.addElement(event.line);
				event.line.setEndPoint(thisMouseXY());
				event.line.draw();
			}
			
			/**
			 * 画线
			 */
			protected function drawLineHandler(event:MouseEvent):void
			{
				switch(event.type)
				{
					case MouseEvent.MOUSE_DOWN :
						this.startingPoint.x = this.stage.mouseX;
						this.startingPoint.y = this.stage.mouseY;
						break;
					
					case MouseEvent.MOUSE_UP :
						break;
					
					case MouseEvent.MOUSE_MOVE :
						trace("xx");
						break;
					
					default :
						break;
				}
			}
			
			private function init():void 
			{
//				var node1:ElementNode=new ElementNode(new Point(300, 300), "开始", Global.START);
//				var node2:ElementNode=new ElementNode(new Point(500, 400), "审批", Global.APPROVAL);
//				var node3:ElementNode=new ElementNode(new Point(600, 600), "结束", Global.END);
//				
//				var line:ElementLine=new ElementLine();
//				line.setStartPoint(new Point(0, 100));
//				line.setEndPoint(new Point(200, 200));
//				line.draw();
//				
//				node1.addAssociatedLines(line, true);
//				node2.addAssociatedLines(line, false);
//				
//				
//				workflowGroup.addElement(node1);
//				workflowGroup.addElement(node2);
				//workflowGroup.addElement(line);
				
			}
			
			/**
			 * 调用底层API画背景网格
			 */
			override protected function updateDisplayList(w:Number, h:Number):void
			{
				super.updateDisplayList(w,h);
				Global.drawBackgroundGrid(grid,w,h);
			}
			
			/**
			 * 点击级件（IconTools）工具栏时，创建元素节点
			 */
			protected function createElementNodeHandler(event:CreateElementNodeEvent):void
			{
				var node:ElementNode = event.node;
				node.addEventListener(CreateElementLineEvent.CREATE_ELEMENT_LINE, createElementLineHandler,false,0,true)
				node.SID = this.countnode;
				workflowGroup.addElement(node);
				
				this.countnode ++;
			}
			
			private function getElementNodeBySID(sid:int):ElementNode
			{
				var ele:ElementNode;
				for(var i:int=0, num:int=workflowGroup.numElements; i<num; i++)
				{
					var node:ElementNode = workflowGroup.getElementAt(i) as ElementNode;
					if(node && node.SID == sid)
					{
						ele = node;
						break;
					}
				}
				
				return ele;
			}
			
			private function thisMouseXY():Point
			{
				return new Point(this.stage.mouseX, this.stage.mouseY);
			}

		]]>
	</fx:Script>
	
	<mx:UIComponent id="grid"/>
	
	<s:Group id="workflowGroup" width="100%" height="100%"/>
	
	<s:BitmapImage source="{Global.LOG}" horizontalCenter="0" top="40"/>
	
	<child:IconTools createElementNode="createElementNodeHandler(event)"/>
	
	<!--<child:Config/>-->

</s:Group>
