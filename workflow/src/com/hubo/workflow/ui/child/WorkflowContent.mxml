<?xml version="1.0" encoding="utf-8"?>
<!--
	 <p><b>auth：</b>HUBO</p>
	 <p><b>create-time：</b>2012-6-12</p>
	 <p><b>mail：</b>hubo.0508ⓐgmail.com	</p>
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%"
		 minHeight="0"
		 minWidth="0"
		 top="122"
		 bottom="23"
		 height="100%">
	
	<fx:Script>
		<![CDATA[
			
			public static const HORIZONTAL:String = "HORIZONTAL";
			
			public static const VERTICAL:String = "VERTICAL";
			
			/**
			 * 更新所有元素节点X坐标
			 */
			public function updateAllHorizontalPoint(y:Number):void
			{
				for(var i:int=0, num:int=numElements; i<num; i++)
				{
					var node:ElementNode = getElementAt(i) as ElementNode;
					if(node && node.selected && node.y != y)
					{
						node.y = y;
						node.refreshLine();
					}
				}
			}
			
			/**
			 * 取得容器中，顺序从左到右的第一个元素节点
			 */
			public function getFirstElementNode(type:String):Point
			{
				var topnode:ElementNode = null;
				for(var i:int=0, num:int=numElements; i<num; i++)
				{
					var elementNode:ElementNode = getElementAt(i) as ElementNode;
					if(elementNode && topnode)
					{
						switch(type)
						{
							case HORIZONTAL :
								topnode = elementNode.x < topnode.x ? elementNode :  topnode;                          
								break;
							
							case VERTICAL : 
								topnode = elementNode.y < topnode.y ? topnode :  elementNode;             
								break;
							
							default:
								break;
						}
					}
					else
					{
						elementNode ? topnode = elementNode : null;
					}
				}
				
				return new Point(topnode.x,topnode.y);
			}
			
			/**
			 * 根据SID在容器中查找元素节点
			 */
			public function getElementNodeBySID(sid:int):ElementNode
			{
				var ele:ElementNode;
				for(var i:int=0, num:int=numElements; i<num; i++)
				{
					var node:ElementNode = getElementAt(i) as ElementNode;
					if(node && node.SID == sid)
					{
						ele = node;
						break;
					}
				}
				
				return ele;
			}
			
			/**
			 * 根据SID在容器中查找元素节点的索引值 
			 */
			public function getElementNodeIndexBySID(sid:int):int
			{
				var index:int;
				for(var i:int=0, num:int=numElements; i<num; i++)
				{
					var node:ElementNode = getElementAt(i) as ElementNode;
					if(node && node.SID == sid)
					{
						index = i;
						break;
					}
				}
				
				return index;
			}
			
		]]>
	</fx:Script>
	
</s:Group>
