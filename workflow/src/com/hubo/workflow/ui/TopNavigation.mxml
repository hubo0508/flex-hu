<?xml version="1.0" encoding="utf-8"?>
<!--
	 <p><b>auth：</b>HUBO</p>
	 <p><b>create-time：</b>2012-6-10</p>
	 <p><b>mail：</b>hubo.0508ⓐgmail.com	</p>
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:components="com.hubo.workflow.components.*"
		 creationComplete="creationComplete(event)"
		 width="100%"
		 height="122"
		 horizontalCenter="0"
		 top="0">
	
	<fx:Metadata>
		[Event(name="clickNavMenu",type="com.hubo.workflow.event.ClickNavMenuEvent")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.hubo.workflow.event.ClickTopNavMenuEvent;
			import com.hubo.workflow.skin.CheckBoxSkin;
			import com.hubo.workflow.ui.child.AlignmentTools;
			import com.hubo.workflow.util.Global;
			import com.hubo.workflow.util.UIUtil;
			
			import mx.events.DynamicEvent;
			import mx.events.FlexEvent;
			import mx.events.FlexMouseEvent;
			import mx.managers.PopUpManager;
			
			/**
			 * 日志
			 */
			public static const LOG:String = "log";
			
			/**
			 * 网格
			 */
			public static const GRID:String = "grid";
			
			/**
			 * 缩放
			 */
			public static const ZOOM:String = "zoom";
			
			/**
			 * 对齐
			 */			
			public static const ALIGNMENT:String = "alignment";
			
			/**
			 * 验证
			 */
			public static const VERIFICATION:String = "verification";
			
			/**
			 * 舍弃
			 */
			public static const CANCEL:String = "cancel";
			
			/**
			 * 立即保存
			 */
			public static const SAVE:String = "save";
			
			/**
			 * 对齐容器
			 */
			private var alignmentTools:AlignmentTools;
			
			
			override protected function createChildren():void
			{
				super.createChildren();
				
				if(alignmentTools == null)
				{
					alignmentTools = new AlignmentTools();
					alignmentTools.addEventListener(FlexMouseEvent.MOUSE_DOWN_OUTSIDE,alignmentToolsOutsideHandler,false,0,true);
				}
			}

			protected function creationComplete(event:FlexEvent):void
			{
				this.initEvent()
			}
			
			private function initEvent():void
			{
				for(var i:int=0, num:int=menuGroup.numElements; i<num; i++)
				{
					menuGroup.getElementAt(i).addEventListener(MouseEvent.CLICK,clickMenuHandler,false,0,true);
				}
			}
			
			protected function clickMenuHandler(event:MouseEvent):void
			{
				var button:Button = event.currentTarget as Button;
				switch(button.type)
				{
					case TopNavigation.ALIGNMENT :
						if(button.getCheckBox().selected)
						{
							var point:Point=UIUtil.getUiAbsolutePosition(button);
							alignmentTools.x=point.x;
							alignmentTools.y=point.y + button.height + 3;
							
							PopUpManager.addPopUp(alignmentTools, UIUtil.getApplication(this), false);
						}
						else
						{
							PopUpManager.removePopUp(alignmentTools);
						}
						
						break;
					
					case TopNavigation.ZOOM :
						break;
					
					default:
						var dye:ClickTopNavMenuEvent = new ClickTopNavMenuEvent(ClickTopNavMenuEvent.CLICK_NAV_MENU);
						dye.name = button.type;
						var checkbox:CheckBox = button.getCheckBox();
						checkbox ? dye.selected = checkbox.selected : null;
						this.dispatchEvent(dye);
						break;
				}
			}
			
			protected function alignmentToolsOutsideHandler(event:FlexMouseEvent):void
			{
				PopUpManager.removePopUp(alignmentTools);
				var thisButton:Button = getButtonMenuByType(TopNavigation.ALIGNMENT);
				thisButton.getCheckBox().selected = false;
			}
			
			private function getButtonMenuByType(type:String):Button
			{
				for(var i:int=0, num:int=menuGroup.numElements; i<num; i++)
				{
					var button:Button = menuGroup.getElementAt(i) as Button;
					if(button &&  button.type == type)
					{
						return button;
						break;
					}
				}
				return null;
			}
		]]>
	</fx:Script>
	
	<s:filters>
		<flash.filters:DropShadowFilter id='dropShadowFilter' xmlns:flash.filters='flash.filters.*' 
										angle='90'
										blurX='2' blurY='2'
										distance='2'
										alpha='0.17' color='#000000' 
										knockout='false' quality='1'
										strength='1' inner='false' hideObject='false'/>
	</s:filters>
	
	<s:Line xFrom="0" xTo="0" yFrom="0" yTo="0" width="100%" top="80">
		<s:stroke>
			<s:SolidColorStroke color="#E5E5E5" weight="1" caps="square"/>
		</s:stroke>
	</s:Line>
	
	<s:Rect  id="bg" top="0" height="80" width="100%">
		<s:fill>
			<s:SolidColor color="#F1F1F1"/>
		</s:fill>
	</s:Rect>	
	
	<s:Rect  id="bg2" height="41" width="100%" bottom="0" horizontalCenter="0">
		<s:fill>
			<s:SolidColor color="#FFFFFF"/>
		</s:fill>
	</s:Rect>	
	
	<s:BitmapImage source="{Global.LOG}" horizontalCenter="0" top="20"/>
	
	<s:Label maxDisplayedLines="1" maxWidth="210" bottom="12" fontSize="18" color="#DA2323" text="请假审批流程" fontFamily="宋体" left="10" fontWeight="bold"/>
	
	<s:Group id="menuGroup" width="100%" bottom="7" left="240">
		<s:layout>
			<s:HorizontalLayout/>
		</s:layout>
		<components:Button type="{TopNavigation.SAVE}"  name="立即保存"  width="74" height="27">
			<s:Label text="立即保存" horizontalCenter="0" verticalCenter="0"/>
		</components:Button>
		<components:Button type="{TopNavigation.CANCEL}"  name="舍弃"  width="74" height="27">
			<s:Label text="舍弃" horizontalCenter="0" verticalCenter="0"/>
		</components:Button>
		<components:Button type="{TopNavigation.VERIFICATION}" name="验证"  width="74" height="27">
			<s:Label text="验证" horizontalCenter="0" verticalCenter="0"/>
		</components:Button>
		<components:Button type="{TopNavigation.ALIGNMENT}" name="对齐"  width="74" height="27" checkboxClick="true">
			<s:CheckBox  verticalCenter="0" horizontalCenter="0" label="对齐"  skinClass="com.hubo.workflow.skin.CheckBoxSkin"/>		
		</components:Button>
		<components:Button type="{TopNavigation.ZOOM}" name="缩放"  width="74" height="27" checkboxClick="true">
			<s:CheckBox  verticalCenter="0" horizontalCenter="0" label="缩放" skinClass="com.hubo.workflow.skin.CheckBoxSkin"/>		
		</components:Button>
		<components:Button type="{TopNavigation.GRID}" name="网格"  width="74" height="27" checkboxClick="true">
			<s:CheckBox selected="true"  verticalCenter="0" horizontalCenter="0" label="网格" skinClass="com.hubo.workflow.skin.CheckBoxSkin"/>		
		</components:Button>
		<components:Button type="{TopNavigation.LOG}" name="日志"  width="74" height="27" checkboxClick="true">
			<s:CheckBox  verticalCenter="0" horizontalCenter="0" label="日志" skinClass="com.hubo.workflow.skin.CheckBoxSkin"/>	 	
		</components:Button>
	</s:Group>
</s:Group>
